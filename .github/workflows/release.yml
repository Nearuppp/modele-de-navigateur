name: Release

on:
  push:
    tags:
      - 'v*' # Se déclenche sur les tags commençant par 'v' (ex: v1.0.0)
  workflow_dispatch: # Permet de déclencher manuellement

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            build_command: npm run build:mac
            artifact_name: macOS
          - os: ubuntu-latest
            build_command: npm run build:linux
            artifact_name: Linux
          - os: windows-latest
            build_command: npm run build:win
            artifact_name: Windows
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build

      - name: Build Electron app for ${{ matrix.artifact_name }}
        run: ${{ matrix.build_command }}

      - name: List releases directory
        run: |
          echo "Contents of releases directory:"
          ls -la releases/ || echo "No releases directory found"
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-build
          path: releases/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: List all artifacts
        run: |
          echo "All artifacts:"
          find artifacts/ -type f -ls
          
      - name: Prepare release files
        run: |
          mkdir -p release-files
          
          # Copy executable files only, with proper naming
          find artifacts/ -name "*.exe" -type f | while read file; do
            cp "$file" "release-files/$(basename "$file")"
          done
          
          find artifacts/ -name "*.dmg" -type f | while read file; do
            cp "$file" "release-files/$(basename "$file")"
          done
          
          find artifacts/ -name "*.AppImage" -type f | while read file; do
            cp "$file" "release-files/$(basename "$file")"
          done
          
          find artifacts/ -name "*.deb" -type f | while read file; do
            cp "$file" "release-files/$(basename "$file")"
          done
          
          find artifacts/ -name "*.rpm" -type f | while read file; do
            cp "$file" "release-files/$(basename "$file")"
          done
          
          find artifacts/ -name "*.snap" -type f | while read file; do
            cp "$file" "release-files/$(basename "$file")"
          done
          
          echo "Final release files:"
          ls -la release-files/

      - name: Check if release files exist
        run: |
          if [ -z "$(ls -A release-files/)" ]; then
            echo "No release files found!"
            exit 1
          else
            echo "Release files ready for upload:"
            ls -la release-files/
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/*
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}